plugins {
    id("org.jetbrains.kotlin.jvm") version "1.6.21"
    id("org.jetbrains.kotlin.kapt") version "1.6.21"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.6.21"
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.10"
    id("com.google.cloud.tools.jib") version "2.8.0"
    id("de.undercouch.download") version "4.0.0"
}

ext {
    datadogAgentUrl = 'https://dtdg.co/latest-java-tracer'
    datadogDirectory = "${buildDir}/datadog"
    datadogAgentFile = 'dd-java-agent.jar'
}


version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    kapt("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.kotlin:micronaut-kotlin-extension-functions")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
}

application {
    mainClass.set("com.example.ApplicationKt")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "17"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "17"
        }
    }
    jib {
        from {
            image = "openjdk:17"
        }
        to {
            image = "gcr.io/myapp/jib-image"
        }
        extraDirectories {
            paths {
                path {
                    from = file(datadogDirectory)
                    into = '/java-agent'
                }

            }
            permissions = [
                    '/java-agent/**': '755'
            ]
        }
        container {
            jvmFlags = [
                    '-javaagent:/java-agent/' + datadogAgentFile
            ]
        }
    }
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}


tasks.register('downloadAgent', Download) {
    src datadogAgentUrl
    dest datadogDirectory + '/' + datadogAgentFile
}
tasks.jibDockerBuild.dependsOn downloadAgent
